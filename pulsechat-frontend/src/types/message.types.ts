// src/types/Message.ts

/**
 * Represents a single chat message with all possible properties.
 */
export interface Message {
  id: string;
  text: string;
  sender: string;
  timestamp: string;
  status?: 'sent' | 'delivered' | 'read'; // Optional status
  readBy?: string[]; // Optional array of user IDs who read the message
}

/**
 * A utility type for a message object before it's sent to the server.
 * It omits the 'id', which is typically generated by the backend.
 */
export type OutgoingMessage = Omit<Message, 'id' | 'timestamp' | 'status' | 'readBy'>;

/**
 * Props for the component that handles user input for sending messages.
 */
export interface MessageInputProps {
  onSendMessage: (message: string) => void;
  disabled?: boolean;
}

/**
 * Props for the component that displays the list of messages.
 */
export interface MessageListProps {
  messages: Message[];
  username: string;
}

/**
 * Props for the component that displays the list of online users.
 */
export interface UserListProps {
  users: string[];
  currentUser: string;
}